@using TotalPortal.Configuration
@using TotalModel.Models;

@(Html.Kendo().Grid<GoodsReceiptPendingPurchaseRequisition>()
    .Name("goodsReceiptPendingPurchaseRequisitionGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.PurchaseRequisitionCode).Title("Số ĐH").Width(50);
        columns.Bound(c => c.PurchaseRequisitionEntryDate).Title("Ngày ĐH").Width(55).Format("{0:" + Settings.DateFormat + "}");
        columns.Bound(c => c.CustomerName).Title("khách hàng").Width(140);
        columns.Bound(c => c.Description).Title("Diễn giải").Width(80);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
            <div class="toolbar" style="float: right;">
                <label>Nhập số đơn hàng/ hoặc mã, tên, MST khách hàng hay đơn vị, người nhận hàng, hoặc mã kho</label>
                <input id="goodsReceiptPendingPurchaseRequisitionFilter" class="k-textbox" style="text-align: center; margin-right: 13px;" onkeyup="goodsReceiptPendingPurchaseRequisitionFilter_KeyUp()" />
            </div>
        </text>);
    })
        .Scrollable(s => s.Height(Settings.PopupContentHeight))
        .DataSource(ds => ds.Ajax()
            .Read(read => read.Action("GetPurchaseRequisitions", "GoodsReceiptAPIs", new { area = "Inventories" }).Data("onAdditionalGetPurchaseRequisitions"))
            .ServerOperation(false)
        )
        .Selectable()
)

<script type="text/javascript">
    function onAdditionalGetPurchaseRequisitions(e) {
        return {
            locationID: window.parent.requireConfig.pageOptions.LocationID
        };
    }

    function goodsReceiptPendingPurchaseRequisitionFilter_KeyUp() {
        var goodsReceiptPendingPurchaseRequisitionFilter = $("#goodsReceiptPendingPurchaseRequisitionFilter").val(), gridDetails = $("#goodsReceiptPendingPurchaseRequisitionGrid").data("kendoGrid");

        if (goodsReceiptPendingPurchaseRequisitionFilter && goodsReceiptPendingPurchaseRequisitionFilter.length >= "@Settings.AutoCompleteMinLenght") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "PurchaseRequisitionCode", operator: "contains", value: goodsReceiptPendingPurchaseRequisitionFilter },

                    { field: "CustomerName", operator: "contains", value: goodsReceiptPendingPurchaseRequisitionFilter },
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }

    $("#goodsReceiptPendingPurchaseRequisitionGrid").dblclick(function (e) {
        okButton_Click();
    })
</script>

